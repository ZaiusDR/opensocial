AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  open-social

  open-social SAM Infrastructure

Globals:
  Function:
    Timeout: 3

Resources:
  OpenSocialCoreLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: open_social_core
      CompatibleRuntimes:
        - python3.8
    Metadata:
      BuildMethod: python3.8

  ProjectScrapperFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: project_scrapper/
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 180
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectDynamoDBTable
        - SSMParameterReadPolicy:
            ParameterName: "github/open-social-token"
      Layers:
        - Ref: OpenSocialCoreLayer
      Events:
        ScrapeHumanitarianEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(0 4 * * ? *)'
            Input: "{\"topic\": \"humanitarian\"}"
        ScrapeNonProfitEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(5 4 * * ? *)'
            Input: "{\"topic\": \"non-profit\"}"
        ScrapeSocialJusticeEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(10 4 * * ? *)'
            Input: "{\"topic\": \"social justice\"}"
        ScrapeSocialChangeEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(15 4 * * ? *)'
            Input: "{\"topic\": \"social change\"}"
        ScrapeClimateChangeEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(20 4 * * ? *)'
            Input: "{\"topic\": \"climate change\"}"
        ScrapePovertyEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(25 4 * * ? *)'
            Input: "{\"topic\": \"poverty\"}"
        ScrapePartpDemocracyEvent:
          Type: Schedule
          Properties:
            Schedule: 'cron(30 4 * * ? *)'
            Input: "{\"topic\": \"participatory democracy\"}"

  ApiCrudLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: open_social_crud/
      Handler: app.list_projects
      Runtime: python3.8
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ProjectDynamoDBTable
      Layers:
        - Ref: OpenSocialCoreLayer
      Events:
        ListEvent:
          Type: Api
          Properties:
            Path: /projects
            Method: get
            RestApiId:
              Ref: OpenSocialAPI

  ProjectDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: 'full_name'
          AttributeType: 'S'
        - AttributeName: 'sorting'
          AttributeType: 'N'
        - AttributeName: 'total_commits'
          AttributeType: 'N'
        - AttributeName: 'contributors'
          AttributeType: 'N'
        - AttributeName: 'rate'
          AttributeType: 'S'
      KeySchema:
        - AttributeName: 'full_name'
          KeyType: 'HASH'
      GlobalSecondaryIndexes:
        - IndexName: 'TotalCommitsIndex'
          KeySchema:
            - AttributeName: 'sorting'
              KeyType: 'HASH'
            - AttributeName: 'total_commits'
              KeyType: 'RANGE'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 1
        - IndexName: 'ContributorsIndex'
          KeySchema:
            - AttributeName: 'sorting'
              KeyType: 'HASH'
            - AttributeName: 'contributors'
              KeyType: 'RANGE'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 1
        - IndexName: 'RateIndex'
          KeySchema:
            - AttributeName: 'sorting'
              KeyType: 'HASH'
            - AttributeName: 'rate'
              KeyType: 'RANGE'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 1
      TableName: open-social-projects
      BillingMode: 'PROVISIONED'
      ProvisionedThroughput:
        ReadCapacityUnits: 10
        WriteCapacityUnits: 25
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: 'ttl'

  OpenSocialAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      MinimumCompressionSize: 0
      BinaryMediaTypes:
        - application~1json
      Cors:
        AllowMethods: "'GET'"
        AllowHeaders: "'X-Forwarded-For'"
        AllowOrigin: "'*'"
      Domain:
        DomainName: api.open-social.net
        CertificateArn: "arn:aws:acm:us-east-1:326499071401:certificate/fbb86ee3-ce15-441b-9186-0ebd59ce232a"
        Route53:
          HostedZoneId: Z056117665GXDL3UXFF7


Outputs:
  ProjectScrapperFunction:
    Description: "Github Project Scrapper"
    Value: !GetAtt ProjectScrapperFunction.Arn
  ProjectScrapperFunctionIamRole:
    Description: "Implicit IAM Role created for Project Scrapper function"
    Value: !GetAtt ProjectScrapperFunction.Arn

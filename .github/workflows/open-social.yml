name: 'Open Social Deploy'
on:
  push:
    branches:
      - master

jobs:
  sam-app:
    name: 'SAM App Deploy'
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Cache dependencies'
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 'Setup Python'
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: 'Install Pip Dependencies'
        run: pip install --use-feature=2020-resolver -r open-social/tests/test_requirements.txt

      - name: 'Run Unittests'
        working-directory: ./open-social
        run: |
          pytest -v tests
        env:
          AWS_DEFAULT_REGION: 'eu-central-1'

      - name: 'Validate SAM App'
        uses: ./actions/aws-sam
        with:
          sam_command: validate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: 'Build SAM App'
        uses: ./actions/aws-sam
        with:
          sam_command: build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: 'Deploy SAM App'
        uses: ./actions/aws-sam
        with:
          sam_command: deploy --template-file .aws-sam/build/template.yaml --stack-name open-social --capabilities CAPABILITY_NAMED_IAM --s3-bucket open-social-sam-layers
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
